# A configurable BDD variable ranking model called Neural Ranking Machine
name: NeuralRankingMachine
# Trainer used to run this model
trainer: PyTorchTrainer

# Feature encoder network params
feat_enc:
  inp: 37
  out: 128
  layers:
  act: ReLU
  dp: 0
  dp_last: off


# Transformer-encoder params
tf_enc:
  switch: True
  d_model: ${model.feat_enc.out}
  n_heads: 4
  d_ff: 256
  dp: 0.1
  act: gelu
  n_layers: 3

# Set-encoder params
set_enc:
  mlp:
    inp: ${model.feat_enc.out}
    out: 256
    layers:
    act: ReLU
    dp: 0.1
    dp_last: off
  agg_type: sum

# Rank predictor network params
rp:
  switch: True
  mlp:
    inp: ${model.feat_enc.out}
    out: 1
    layers:
    act: Sigmoid
    dp: 0
    dp_last: off
  loss_fn: PointwiseRMSELoss

# Weight predictor network params
wp:
  switch: False
  mlp:
    inp: ${model.set_enc.mlp.out}
    out: 18
    layers:
    act: Tanh
    dp: 0
    dp_last: off
  loss_fn: RMSE


# Time predictor network params
tp:
  switch: False
  mlp:
    inp: ${model.set_enc.mlp.out}
    out: 1
    layers:
    act: Sigmoid
    dp: 0
    dp_last: off
  loss_fn: RMSE
